<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title><![CDATA[ZJ Org Blog]]></title>
<description><![CDATA[ZJ Org Blog]]></description>
<link>https://alienzj.github.io/</link>
<lastBuildDate>Sat, 26 Mar 2022 00:38:00 +0800</lastBuildDate>
<item>
  <title><![CDATA[Vultr trip]]></title>
  <description><![CDATA[
<p>
Recently I found that <a href="https://github.com/geph-official/geph4">geph</a> is getting less and less useful, such as frequent disconnection, or unable to connect to the main server, or complaining about too many logins. Seriously, the experience was terrible. Once upon a time, I was also a person who surfed the sea of the Internet. Now, starting to miss the days of <a href="https://github.com/shadowsocks/shadowsocks-rust">shadowsocks.</a>
</p>

<p>
One or two, I decided to start using shadowsocks again.
</p>


<div id="outline-container-org9d9369a" class="outline-2">
<h2 id="org9d9369a">Buy vps&#xa0;&#xa0;&#xa0;<span class="tag"><span class="ATTACH">ATTACH</span></span></h2>
<div class="outline-text-2" id="text-org9d9369a">
<p>
First, I shoud to buy a virtual machine which can run a linux system and host a shadowsocks service. There is no doublt, I choose vultr.
</p>
</div>
</div>

<div id="outline-container-org8038e6e" class="outline-2">
<h2 id="org8038e6e">Check server&rsquo;s port is OK</h2>
<div class="outline-text-2" id="text-org8038e6e">
<p>
To be honest, thank my little brother <a href="https://github.com/ohmyarch">Michael Pacman</a> so much for helping me to figure out the port issue.
</p>
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #5B6268;"># </span><span style="color: #5B6268;">install nc on server and client site</span>
<span style="color: #ECBE7B;">sudo</span> pacman -S openbsd-netcat

<span style="color: #5B6268;"># </span><span style="color: #5B6268;">server: open port &lt;port&gt; on server</span>
<span style="color: #ECBE7B;">sudo</span> nc -lv -p &lt;port&gt;

<span style="color: #5B6268;"># </span><span style="color: #5B6268;">client: check whether the client network can access it</span>
nc -nv &lt;server_ip_v4&gt; &lt;port&gt;
&lt;input something&gt;

<span style="color: #5B6268;"># </span><span style="color: #5B6268;">If we can see &lt;input something&gt; from serve, that mean the network of server is accessible.</span>
<span style="color: #5B6268;"># </span><span style="color: #5B6268;">If not, change port or contact the staff of vultr to know your server better.</span>
</pre>
</div>
</div>
</div>

<div id="outline-container-orgef627e7" class="outline-2">
<h2 id="orgef627e7">Ok, port is not OK</h2>
<div class="outline-text-2" id="text-orgef627e7">
<p>
That was true. I meet it.
So, two thousand years later.
</p>

<div class="org-src-container">
<pre class="src src-bash"><span style="color: #5B6268;"># </span><span style="color: #5B6268;">Change game rule</span>
<span style="color: #ECBE7B;">sudo</span> iptables -A INPUT -p tcp --dport &lt;ss_port&gt; -j ACCEPT
<span style="color: #ECBE7B;">sudo</span> iptables -A INPUT -p udp --dport &lt;ss_port&gt; -j ACCEPT
<span style="color: #ECBE7B;">sudo</span> iptables -A INPUT -p tcp --dport &lt;ssh_port&gt; -j ACCEPT

<span style="color: #5B6268;"># </span><span style="color: #5B6268;">Save it</span>
<span style="color: #ECBE7B;">sudo</span> iptables-save -f /etc/iptables/iptables.rules

<span style="color: #5B6268;"># </span><span style="color: #5B6268;">Run systemd iptables service</span>
<span style="color: #ECBE7B;">sudo</span> systemctl start iptables.service
<span style="color: #ECBE7B;">sudo</span> systemctl status iptables.service

<span style="color: #5B6268;"># </span><span style="color: #5B6268;">OK</span>
<span style="color: #ECBE7B;">sudo</span> systemctl enable iptables.service
</pre>
</div>
<p>
For details, you can refer the documentation <a href="https://wiki.archlinux.org/title/Iptables">here.</a>
Just like vultr&rsquo;s staff saied, <b><b>We do not recommend disabling your firewall</b></b>.
</p>
</div>
</div>

<div id="outline-container-org62e068c" class="outline-2">
<h2 id="org62e068c">Configure shadowsocks</h2>
<div class="outline-text-2" id="text-org62e068c">
<div class="org-src-container">
<pre class="src src-bash">pacman -S shadowsocks-rust-opt
pacman -S shadowsocks-v2ray-plugin

<span style="color: #5B6268;"># </span><span style="color: #5B6268;">client configuration</span>
<span style="color: #ECBE7B;">cat</span> /etc/shadowsocks-rust/config.json
<span style="color: #51afef;">{</span>
    <span style="color: #98be65;">"server"</span>: <span style="color: #98be65;">"&lt;server_ip&gt;"</span>,
    <span style="color: #98be65;">"server_port"</span>: &lt;ss_port&gt;,
    <span style="color: #98be65;">"local_address"</span>: <span style="color: #98be65;">"127.0.0.1"</span>,
    <span style="color: #98be65;">"local_port"</span>: 1080,
    <span style="color: #98be65;">"password"</span>: <span style="color: #98be65;">"&lt;passwd&gt;"</span>,
    <span style="color: #98be65;">"timeout"</span>: 600,
    <span style="color: #98be65;">"method"</span>: <span style="color: #98be65;">"chacha20-ietf-poly1305"</span>,
    <span style="color: #98be65;">"plugin"</span>: <span style="color: #98be65;">"v2ray-plugin"</span>,
<span style="color: #51afef;">}</span>

<span style="color: #5B6268;"># </span><span style="color: #5B6268;">server configuration</span>
<span style="color: #ECBE7B;">cat</span> /etc/shadowsocks-rust/config.json
<span style="color: #51afef;">{</span>
    <span style="color: #98be65;">"server"</span>: <span style="color: #98be65;">"::"</span>,
    <span style="color: #98be65;">"server_port"</span>: &lt;ss_port&gt;,
    <span style="color: #98be65;">"password"</span>: <span style="color: #98be65;">"&lt;passwd&gt;"</span>,
    <span style="color: #98be65;">"timeout"</span>: 600,
    <span style="color: #98be65;">"method"</span>: <span style="color: #98be65;">"chacha20-ietf-poly1305"</span>,
    <span style="color: #98be65;">"plugin"</span>: <span style="color: #98be65;">"v2ray-plugin"</span>,
    <span style="color: #98be65;">"plugin_opts"</span>: <span style="color: #98be65;">"server"</span>
<span style="color: #51afef;">}</span>

<span style="color: #5B6268;"># </span><span style="color: #5B6268;">on client and server, keep time</span>
<span style="color: #ECBE7B;">sudo</span> timedatectl set-ntp true
<span style="color: #ECBE7B;">sudo</span> hwclock --systohc

<span style="color: #5B6268;"># </span><span style="color: #5B6268;">server</span>
systemctl start shadowsocks-rust-server@config.service

<span style="color: #5B6268;"># </span><span style="color: #5B6268;">client</span>
systemctl start shadowsocks-rust@config.service

<span style="color: #5B6268;"># </span><span style="color: #5B6268;">OK</span>
systemctl enable shadowsocks-rust-server@config.service
systemctl enable shadowsocks-rust@config.service
</pre>
</div>

<p>
Thank my little brother Michael Pacman again for helping me figure the fault of server configuration.
We should use <b><b>::</b></b> for server address, not <b><b>127.0.0.1</b></b> for server address.
</p>

<p>
Hope for a free web.
</p>
</div>
</div>
<div class="taglist"><a href="https://alienzj.github.io/tags.html">Tags</a>: <a href="https://alienzj.github.io/tag-vultr.html">Vultr</a> <a href="https://alienzj.github.io/tag-vps.html">VPS</a> <a href="https://alienzj.github.io/tag-ss.html">SS</a> <a href="https://alienzj.github.io/tag-free.html">Free</a> </div>]]></description>
  <category><![CDATA[Vultr]]></category>
  <category><![CDATA[VPS]]></category>
  <category><![CDATA[SS]]></category>
  <category><![CDATA[Free]]></category>
  <link>https://alienzj.github.io/2022-03-25-vultr-trip.html</link>
  <guid>https://alienzj.github.io/2022-03-25-vultr-trip.html</guid>
  <pubDate>Fri, 25 Mar 2022 23:50:00 +0800</pubDate>
</item>
<item>
  <title><![CDATA[Rosalind DNA]]></title>
  <description><![CDATA[

<div id="outline-container-orgdb2babb" class="outline-2">
<h2 id="orgdb2babb">Problem</h2>
<div class="outline-text-2" id="text-orgdb2babb">
<p>
A string is simply an ordered collection of symbols selected from some alphabet and formed into a word; the length of a string is the number of symbols that it contains.
An example of a length 21 DNA string (whose alphabet contains the symbols &rsquo;A&rsquo;, &rsquo;C&rsquo;, &rsquo;G&rsquo;, and &rsquo;T&rsquo;) is &ldquo;ATGCTTCAGAAAGGTCTTACG.&rdquo;
Given: A DNA string s of length at most 1000 nt.
Return: Four integers (separated by spaces) counting the respective number of times that the symbols &rsquo;A&rsquo;, &rsquo;C&rsquo;, &rsquo;G&rsquo;, and &rsquo;T&rsquo; occur in s.
</p>
</div>
</div>

<div id="outline-container-org9d44fff" class="outline-2">
<h2 id="org9d44fff">Sample Dataset</h2>
<div class="outline-text-2" id="text-org9d44fff">
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #0000cf9bef42;">AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGC</span>
</pre>
</div>
</div>
</div>

<div id="outline-container-org879dc4a" class="outline-2">
<h2 id="org879dc4a">Sample Output</h2>
<div class="outline-text-2" id="text-org879dc4a">
<div class="org-src-container">
<pre class="src src-bash"><span style="color: #da8548; font-weight: bold;">20</span> <span style="color: #da8548; font-weight: bold;">12</span> <span style="color: #da8548; font-weight: bold;">17</span> <span style="color: #da8548; font-weight: bold;">21</span>
</pre>
</div>
</div>
</div>

<div id="outline-container-org096fdf5" class="outline-2">
<h2 id="org096fdf5">Attempts</h2>
<div class="outline-text-2" id="text-org096fdf5">
</div>
<div id="outline-container-orgfdaad71" class="outline-3">
<h3 id="orgfdaad71">Rust</h3>
<div class="outline-text-3" id="text-orgfdaad71">
<div class="org-src-container">
<pre class="src src-rust"><span style="color: #ffff791e7586;">use</span> <span style="color: #a9a1e1;">std</span>::<span style="color: #5c47c7a0527e;">env</span>;
<span style="color: #ffff791e7586;">use</span> <span style="color: #a9a1e1;">std</span>::<span style="color: #a9a1e1;">fs</span>::<span style="color: #ECBE7B;">File</span>;
<span style="color: #ffff791e7586;">use</span> <span style="color: #a9a1e1;">std</span>::<span style="color: #a9a1e1;">io</span>::<span style="color: #a9a1e1;">prelude</span>::*;

<span style="color: #0000ce4e8dd2;">fn</span> <span style="color: #028ab476ffff;">count_nucleotides</span>(<span style="color: #0000c319ffff;">dna</span>: <span style="color: #ECBE7B;">String</span>) -&gt; [<span style="color: #ECBE7B;">u64</span>; <span style="color: #da8548; font-weight: bold;">5</span>] {
    <span style="color: #0000cc4fffff;">let</span> <span style="color: #ff52980134de;">mut</span> <span style="color: #0000cc7f77dd;">counts</span>: [<span style="color: #ECBE7B;">u64</span>; <span style="color: #da8548; font-weight: bold;">5</span>] <span style="color: #ffff73f78748;">=</span> [<span style="color: #da8548; font-weight: bold;">0</span>; <span style="color: #da8548; font-weight: bold;">5</span>];
    <span style="color: #0000c9ceffff;">for</span> <span style="color: #72f1ac2bffff;">nucleotide</span> <span style="color: #c9ddb105130d;">in</span> <span style="color: #0000c319ffff;">dna</span>.<span style="color: #ffff73c38829;">chars</span>() {
        <span style="color: #0000b911ffff;">match</span> <span style="color: #72f1ac2bffff;">nucleotide</span> {
            <span style="color: #98be65;">'A'</span> <span style="color: #ffff73f78748;">=</span>&gt; <span style="color: #0000cc7f77dd;">counts</span>[<span style="color: #da8548; font-weight: bold;">0</span>] +<span style="color: #ffff73f78748;">=</span> <span style="color: #da8548; font-weight: bold;">1</span>,
            <span style="color: #98be65;">'C'</span> <span style="color: #ffff73f78748;">=</span>&gt; <span style="color: #0000cc7f77dd;">counts</span>[<span style="color: #da8548; font-weight: bold;">1</span>] +<span style="color: #ffff73f78748;">=</span> <span style="color: #da8548; font-weight: bold;">1</span>,
            <span style="color: #98be65;">'G'</span> <span style="color: #ffff73f78748;">=</span>&gt; <span style="color: #0000cc7f77dd;">counts</span>[<span style="color: #da8548; font-weight: bold;">2</span>] +<span style="color: #ffff73f78748;">=</span> <span style="color: #da8548; font-weight: bold;">1</span>,
            <span style="color: #98be65;">'T'</span> <span style="color: #ffff73f78748;">=</span>&gt; <span style="color: #0000cc7f77dd;">counts</span>[<span style="color: #da8548; font-weight: bold;">3</span>] +<span style="color: #ffff73f78748;">=</span> <span style="color: #da8548; font-weight: bold;">1</span>,
            <span style="color: #f77a862cfcc8;">_</span> <span style="color: #ffff73f78748;">=</span>&gt; <span style="color: #0000cc7f77dd;">counts</span>[<span style="color: #da8548; font-weight: bold;">4</span>] +<span style="color: #ffff73f78748;">=</span> <span style="color: #da8548; font-weight: bold;">1</span>,
        }
    }
    <span style="color: #0000cc7f77dd;">counts</span>
}

<span style="color: #0000ce4e8dd2;">fn</span> <span style="color: #ffff78f27608;">main</span>() {
    <span style="color: #0000cc4fffff;">let</span> <span style="color: #0000c930ffff;">args</span>: <span style="color: #ECBE7B;">Vec</span>&lt;<span style="color: #ECBE7B;">String</span>&gt; <span style="color: #ffff73f78748;">=</span> <span style="color: #a9a1e1;">env</span>::<span style="color: #0000c930ffff;">args</span>().<span style="color: #f72d864ffd0c;">collect</span>();
    <span style="color: #0000cc4fffff;">let</span> <span style="color: #ffff742ecd42;">filename</span> <span style="color: #ffff73f78748;">=</span> &amp;<span style="color: #0000c930ffff;">args</span>[<span style="color: #da8548; font-weight: bold;">1</span>];
    <span style="color: #0000cc4fffff;">let</span> <span style="color: #ff52980134de;">mut</span> <span style="color: #ffff7a91e24a;">f</span> <span style="color: #ffff73f78748;">=</span> <span style="color: #ECBE7B;">File</span>::<span style="color: #b1c39f05ffff;">open</span>(<span style="color: #ffff742ecd42;">filename</span>).<span style="color: #0000ce68ffff;">expect</span>(<span style="color: #98be65;">"file not found"</span>);
    <span style="color: #0000cc4fffff;">let</span> <span style="color: #ff52980134de;">mut</span> <span style="color: #0000c319ffff;">dna</span> <span style="color: #ffff73f78748;">=</span> <span style="color: #ECBE7B;">String</span>::<span style="color: #ffff6fe8ae25;">new</span>();
    <span style="color: #ffff7a91e24a;">f</span>.<span style="color: #ede6a1bc242b;">read_to_string</span>(&amp;<span style="color: #ff52980134de;">mut</span> <span style="color: #0000c319ffff;">dna</span>).<span style="color: #0000ce68ffff;">expect</span>(<span style="color: #98be65;">"unable to read file"</span>);

    <span style="color: #0000cc4fffff;">let</span> <span style="color: #0000cc7f77dd;">counts</span>: [<span style="color: #ECBE7B;">u64</span>; <span style="color: #da8548; font-weight: bold;">5</span>] <span style="color: #ffff73f78748;">=</span> <span style="color: #028ab476ffff;">count_nucleotides</span>(<span style="color: #0000c319ffff;">dna</span>);

    <span style="color: #c678dd;">println!</span>(<span style="color: #98be65;">"A: </span><span style="color: #98be65; font-style: italic;">{}</span><span style="color: #98be65;">"</span>, <span style="color: #0000cc7f77dd;">counts</span>[<span style="color: #da8548; font-weight: bold;">0</span>]);
    <span style="color: #c678dd;">println!</span>(<span style="color: #98be65;">"C: </span><span style="color: #98be65; font-style: italic;">{}</span><span style="color: #98be65;">"</span>, <span style="color: #0000cc7f77dd;">counts</span>[<span style="color: #da8548; font-weight: bold;">1</span>]);
    <span style="color: #c678dd;">println!</span>(<span style="color: #98be65;">"G: </span><span style="color: #98be65; font-style: italic;">{}</span><span style="color: #98be65;">"</span>, <span style="color: #0000cc7f77dd;">counts</span>[<span style="color: #da8548; font-weight: bold;">2</span>]);
    <span style="color: #c678dd;">println!</span>(<span style="color: #98be65;">"T: </span><span style="color: #98be65; font-style: italic;">{}</span><span style="color: #98be65;">"</span>, <span style="color: #0000cc7f77dd;">counts</span>[<span style="color: #da8548; font-weight: bold;">3</span>]);
    <span style="color: #c678dd;">println!</span>(<span style="color: #98be65;">"Other: </span><span style="color: #98be65; font-style: italic;">{}</span><span style="color: #98be65;">"</span>, <span style="color: #0000cc7f77dd;">counts</span>[<span style="color: #da8548; font-weight: bold;">4</span>]);
}
</pre>
</div>
</div>
</div>
</div>
<div class="taglist"><a href="https://alienzj.github.io/tags.html">Tags</a>: <a href="https://alienzj.github.io/tag-rosalind.html">Rosalind</a> <a href="https://alienzj.github.io/tag-bioinformatics.html">Bioinformatics</a> </div>]]></description>
  <category><![CDATA[Rosalind]]></category>
  <category><![CDATA[Bioinformatics]]></category>
  <link>https://alienzj.github.io/2022-03-07-rosalind-dna.html</link>
  <guid>https://alienzj.github.io/2022-03-07-rosalind-dna.html</guid>
  <pubDate>Mon, 07 Mar 2022 13:50:00 +0800</pubDate>
</item>
<item>
  <title><![CDATA[Concurrent]]></title>
  <description><![CDATA[
<p>
Today, I learn python concurrent from <a href="https://python3-cookbook.readthedocs.io/zh_CN/latest/c12/p08_perform_simple_parallel_programming.html">python3 cookbook</a>.
</p>

<p>
Bellow is some exampels using concurrent.
</p>

<div id="outline-container-orga379274" class="outline-2">
<h2 id="orga379274">submit</h2>
<div class="outline-text-2" id="text-orga379274">
<div class="org-src-container">
<pre class="src src-jupyter-python"><span style="color: #ffff870554a1;">import</span> <span style="color: #0000d03ddd20;">concurrent</span>.<span style="color: #0000cfe9ae05;">futures</span>

<span style="color: #5B6268;"># </span><span style="color: #5B6268;">Some function</span>
<span style="color: #ffff770b7bed;">do</span> = [[<span style="color: #da8548; font-weight: bold;">1</span>, <span style="color: #da8548; font-weight: bold;">2</span>, <span style="color: #da8548; font-weight: bold;">3</span>], [<span style="color: #da8548; font-weight: bold;">4</span>, <span style="color: #da8548; font-weight: bold;">5</span>, <span style="color: #da8548; font-weight: bold;">6</span>]]

<span style="color: #8664c22937f5;">def</span> <span style="color: #0000c45effff;">work</span>(<span style="color: #ffff86fb54b6;">x</span>):
    <span style="color: #ffff82af5dc2;">print</span>(<span style="color: #ffff7a91e24a;">f</span><span style="color: #98be65;">"x: {x}"</span>)
    <span style="color: #0000cfe6e89b;">return</span> <span style="color: #ffff86fb54b6;">x</span>

<span style="color: #ffff70d2ba7d;">with</span> <span style="color: #0000d03ddd20;">concurrent</span>.<span style="color: #0000cfe9ae05;">futures</span>.<span style="color: #a254bc8624e4;">ProcessPoolExecutor</span>() <span style="color: #0000cdc3ffff;">as</span> <span style="color: #9a47a4cdffff;">pool</span>:
    <span style="color: #5B6268;"># </span><span style="color: #5B6268;">Example of submitting work to the pool</span>
    <span style="color: #0170b47affff;">future_result</span> = <span style="color: #9a47a4cdffff;">pool</span>.<span style="color: #e9338c58ffff;">submit</span>(<span style="color: #0000c45effff;">work</span>, <span style="color: #ffff770b7bed;">do</span>)

    <span style="color: #5B6268;"># </span><span style="color: #5B6268;">Obtaining the result (blocks until done)</span>
    <span style="color: #17f9b40cffff;">r</span> = <span style="color: #0170b47affff;">future_result</span>.<span style="color: #6d33c5d04881;">result</span>()
    <span style="color: #ffff82af5dc2;">print</span>(<span style="color: #ffff7a91e24a;">f</span><span style="color: #98be65;">"r: {r}"</span>)
</pre>
</div>

<pre class="example">
x: [[1, 2, 3], [4, 5, 6]]
r: [[1, 2, 3], [4, 5, 6]]
</pre>
</div>
</div>


<div id="outline-container-orgac3a618" class="outline-2">
<h2 id="orgac3a618">map</h2>
<div class="outline-text-2" id="text-orgac3a618">
<div class="org-src-container">
<pre class="src src-jupyter-python"><span style="color: #ffff70d2ba7d;">with</span> <span style="color: #0000d03ddd20;">concurrent</span>.<span style="color: #0000cfe9ae05;">futures</span>.<span style="color: #a254bc8624e4;">ProcessPoolExecutor</span>() <span style="color: #0000cdc3ffff;">as</span> <span style="color: #9a47a4cdffff;">pool</span>:
    <span style="color: #5B6268;"># </span><span style="color: #5B6268;">Example of submitting work to the pool</span>
    <span style="color: #0170b47affff;">future_result</span> = []
    <span style="color: #0000c9ceffff;">for</span> <span style="color: #c8f2b1581317;">i</span> <span style="color: #c9ddb105130d;">in</span> <span style="color: #9a47a4cdffff;">pool</span>.<span style="color: #c678dd;">map</span>(<span style="color: #0000c45effff;">work</span>, <span style="color: #ffff770b7bed;">do</span>):
        <span style="color: #0170b47affff;">future_result</span>.<span style="color: #0000bcf9ffff;">append</span>(<span style="color: #c8f2b1581317;">i</span>)

    <span style="color: #5B6268;"># </span><span style="color: #5B6268;">Obtaining the result (blocks until done)</span>
    <span style="color: #ffff82af5dc2;">print</span>(<span style="color: #ffff7a91e24a;">f</span><span style="color: #98be65;">"r: {future_result}"</span>)
</pre>
</div>

<pre class="example">
x: [1, 2, 3]
x: [4, 5, 6]
r: [[1, 2, 3], [4, 5, 6]]
</pre>
</div>
</div>
<div class="taglist"><a href="https://alienzj.github.io/tags.html">Tags</a>: <a href="https://alienzj.github.io/tag-concurrent.html">Concurrent</a> </div>]]></description>
  <category><![CDATA[Concurrent]]></category>
  <link>https://alienzj.github.io/2020-09-10-concurrent.html</link>
  <guid>https://alienzj.github.io/2020-09-10-concurrent.html</guid>
  <pubDate>Thu, 10 Sep 2020 17:06:00 +0800</pubDate>
</item>
<item>
  <title><![CDATA[Algorithm]]></title>
  <description><![CDATA[

<div id="outline-container-org319d679" class="outline-2">
<h2 id="org319d679">Course</h2>
<div class="outline-text-2" id="text-org319d679">
<ul class="org-ul">
<li><a href="https://www.coursera.org/learn/algorithmic-toolbox/">Algorithm Toolbox</a></li>
</ul>
</div>
</div>
<div class="taglist"><a href="https://alienzj.github.io/tags.html">Tags</a>: <a href="https://alienzj.github.io/tag-algorithm.html">Algorithm</a> </div>]]></description>
  <category><![CDATA[Algorithm]]></category>
  <link>https://alienzj.github.io/2020-09-07-algorithm.html</link>
  <guid>https://alienzj.github.io/2020-09-07-algorithm.html</guid>
  <pubDate>Mon, 07 Sep 2020 21:49:00 +0800</pubDate>
</item>
<item>
  <title><![CDATA[About]]></title>
  <description><![CDATA[
<p>
About is a about about about.
</p>
<div class="taglist"><a href="https://alienzj.github.io/tags.html">Tags</a>: <a href="https://alienzj.github.io/tag-about.html">About</a> </div>]]></description>
  <category><![CDATA[About]]></category>
  <link>https://alienzj.github.io/about.html</link>
  <guid>https://alienzj.github.io/about.html</guid>
  <pubDate>Sat, 01 Aug 2020 14:23:00 +0800</pubDate>
</item>
</channel>
</rss>
